{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenClass = exports.screenClasses = void 0;\nvar _react = require(\"react\");\nvar _config = require(\"./config\");\nvar _primitives = require(\"./primitives\");\n\n/* global window */\nconst getViewPort = source => {\n  if (source && source.current && source.current.clientWidth) {\n    return source.current.clientWidth;\n  }\n  if (typeof _primitives.Window !== 'undefined' && _primitives.Window.innerWidth) {\n    return _primitives.Window.innerWidth;\n  }\n  return null;\n};\nconst screenClasses = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'xxxl'];\nexports.screenClasses = screenClasses;\nconst useScreenClass = (source, fallbackScreenClass) => {\n  const getScreenClass = () => {\n    const {\n      breakpoints,\n      defaultScreenClass,\n      maxScreenClass\n    } = (0, _config.getConfiguration)();\n    let newScreenClass = defaultScreenClass;\n    const viewport = getViewPort(source);\n    if (viewport) {\n      newScreenClass = 'xs';\n      if (breakpoints[0] && viewport >= breakpoints[0]) newScreenClass = 'sm';\n      if (breakpoints[1] && viewport >= breakpoints[1]) newScreenClass = 'md';\n      if (breakpoints[2] && viewport >= breakpoints[2]) newScreenClass = 'lg';\n      if (breakpoints[3] && viewport >= breakpoints[3]) newScreenClass = 'xl';\n      if (breakpoints[4] && viewport >= breakpoints[4]) newScreenClass = 'xxl';\n      if (breakpoints[5] && viewport >= breakpoints[5]) newScreenClass = 'xxxl';\n    } else if (fallbackScreenClass) {\n      newScreenClass = fallbackScreenClass;\n    }\n    const newScreenClassIndex = screenClasses.indexOf(newScreenClass);\n    const maxScreenClassIndex = screenClasses.indexOf(maxScreenClass);\n    if (maxScreenClassIndex >= 0 && newScreenClassIndex > maxScreenClassIndex) {\n      newScreenClass = screenClasses[maxScreenClassIndex];\n    }\n    return newScreenClass;\n  };\n  const [screenClass, setScreenClass] = (0, _react.useState)(() => getScreenClass());\n  (0, _react.useEffect)(() => {\n    const handleWindowResized = () => setScreenClass(getScreenClass());\n    _primitives.Window.addEventListener('resize', handleWindowResized, false);\n    return () => {\n      _primitives.Window.removeEventListener('resize', handleWindowResized, false);\n    };\n  }, []);\n  return screenClass;\n};\nexports.useScreenClass = useScreenClass;","map":{"version":3,"names":["Object","defineProperty","exports","value","useScreenClass","screenClasses","_react","require","_config","_primitives","getViewPort","source","current","clientWidth","Window","innerWidth","fallbackScreenClass","getScreenClass","breakpoints","defaultScreenClass","maxScreenClass","getConfiguration","newScreenClass","viewport","newScreenClassIndex","indexOf","maxScreenClassIndex","screenClass","setScreenClass","useState","useEffect","handleWindowResized","addEventListener","removeEventListener"],"sources":["C:/project/OAO-A-Nice-Gadgets-product_catalog-/nice-gadgets-product_catalog/node_modules/react-grid-system/build/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenClass = exports.screenClasses = void 0;\n\nvar _react = require(\"react\");\n\nvar _config = require(\"./config\");\n\nvar _primitives = require(\"./primitives\");\n\n/* global window */\nconst getViewPort = source => {\n  if (source && source.current && source.current.clientWidth) {\n    return source.current.clientWidth;\n  }\n\n  if (typeof _primitives.Window !== 'undefined' && _primitives.Window.innerWidth) {\n    return _primitives.Window.innerWidth;\n  }\n\n  return null;\n};\n\nconst screenClasses = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'xxxl'];\nexports.screenClasses = screenClasses;\n\nconst useScreenClass = (source, fallbackScreenClass) => {\n  const getScreenClass = () => {\n    const {\n      breakpoints,\n      defaultScreenClass,\n      maxScreenClass\n    } = (0, _config.getConfiguration)();\n    let newScreenClass = defaultScreenClass;\n    const viewport = getViewPort(source);\n\n    if (viewport) {\n      newScreenClass = 'xs';\n      if (breakpoints[0] && viewport >= breakpoints[0]) newScreenClass = 'sm';\n      if (breakpoints[1] && viewport >= breakpoints[1]) newScreenClass = 'md';\n      if (breakpoints[2] && viewport >= breakpoints[2]) newScreenClass = 'lg';\n      if (breakpoints[3] && viewport >= breakpoints[3]) newScreenClass = 'xl';\n      if (breakpoints[4] && viewport >= breakpoints[4]) newScreenClass = 'xxl';\n      if (breakpoints[5] && viewport >= breakpoints[5]) newScreenClass = 'xxxl';\n    } else if (fallbackScreenClass) {\n      newScreenClass = fallbackScreenClass;\n    }\n\n    const newScreenClassIndex = screenClasses.indexOf(newScreenClass);\n    const maxScreenClassIndex = screenClasses.indexOf(maxScreenClass);\n\n    if (maxScreenClassIndex >= 0 && newScreenClassIndex > maxScreenClassIndex) {\n      newScreenClass = screenClasses[maxScreenClassIndex];\n    }\n\n    return newScreenClass;\n  };\n\n  const [screenClass, setScreenClass] = (0, _react.useState)(() => getScreenClass());\n  (0, _react.useEffect)(() => {\n    const handleWindowResized = () => setScreenClass(getScreenClass());\n\n    _primitives.Window.addEventListener('resize', handleWindowResized, false);\n\n    return () => {\n      _primitives.Window.removeEventListener('resize', handleWindowResized, false);\n    };\n  }, []);\n  return screenClass;\n};\n\nexports.useScreenClass = useScreenClass;"],"mappings":"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"},"metadata":{},"sourceType":"script"}